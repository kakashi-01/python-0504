#coding=utf-8
#author:Kingving time:2020/6/25 14:07

'''1. 用例设计'''
'''
接口测试是无界面的功能测试，设计用例思路跟功能测试一样（只是一个注重的是测前端页面，一个注重的是测后端接口）
'''

'''
1.输入参数测试： 针对输入的参数进行测试，也可以说是假定接口参数的不正确性进行的测试，确保接口对任意类型的输入都做了相应的处理：
输入参数合法，
输入参数不合法，
输入参数为空，
输入参数为null，
输入参数超长；

2.功能测试：接口是否满足了所提供的功能，相当于是正常情况测试

3.异常场景，如：请求超时、快速连续点击、请求失败情况（任务型的，失败后是否可以重新下发任务）


'''

'''2. 接口测试与功能测试区别'''
'''
1.接口测试可以绕开前端，前端有一些输入限制，如6-20位，但是接口却可以输入5位数提交，看服务端是不是做了6-20的限制
（也就是说，平常点点点测的是页面功能，接口测的是服务端功能）

2.接口还可以测试抽奖次数并发情况，举个场景例子：

某个金融app有个抽奖撸羊毛活动，某个用户可以抽一次，必中一个奖项（1-10元）


-- 你在前端页面只能点一次，就不能再点了

-- 如果你用接口去测，可以弄个并发去请求，虽然只有一次机会，但你去并发抽奖，此时服务端就会容易出错了（来不及判断你是不是一次机会），
此时会收到多个抽奖的请求，导致发放多个奖品出去

（这种并发最容易出BUG）

'''

'''3.写用例'''
'''

方法1：有效等价：必填项填正确的值，看返回是否成功
使用用例管理系统，写标准测试用例

方法2:无效等价：必填项填错误的值/空值/数字/特殊字符，看返回是否失败

方法3：边界值
'''

'''4.专项测试'''

'''
APP测试会非常关注流量这块,比如登录app账号时候，上传一个5M左右图片作为头像，看会不会压缩到100k以下（如果不压缩，流量伤不起）
在fiddler界面上 body里看

'''

'''5.模拟弱网测试'''
# fiddle中----rules---performance--simulate modem speeds













